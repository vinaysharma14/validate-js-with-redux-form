{"version":3,"sources":["Store/actionTypes/index.js","Store/actionTypes/authActionTypes.js","Store/actionTypes/formActionTypes.js","Store/actionTypes/uiActionTypes.js","Store/actions/authActions/index.js","Components/Spinner/index.js","Components/TextInput/index.js","Components/RadioInput/index.js","Components/FormGroupContainer/index.js","Components/ProfileUploader/index.js","Components/Tags/index.js","Components/DatePicker/index.js","Components/Toastr/index.js","utils/customValidators.js","utils/mapFormErrors.js","utils/validations.js","utils/fakeApi.js","utils/asyncValidators.js","utils/asyncValidations.js","normalizers/dateNormalizer.js","normalizers/phoneNormalizer.js","normalizers/zipNormalizer.js","Components/Form/index.js","Container/index.js","Store/actions/uiActions/index.js","Store/reducers/authReducer/index.js","Store/reducers/uiReducer/index.js","Store/reducers/index.js","services/authenticationServices.js","Store/sagas/authSaga/index.js","Store/sagas/index.js","Store/index.js","App/index.js","serviceWorker.js","index.js"],"names":["signUpRequest","signUpSuccess","signUpFailure","updateField","showToastr","hideToastr","signUpSuccessAction","authObject","type","actionTypes","payload","signUpFailureAction","error","authError","Spinner","solid","customClass","className","defaultProps","TextInput","input","meta","label","placeholder","optional","testingId","onClick","fieldIcon","iconAction","FormGroup","Label","asyncValidating","Input","valid","value","invalid","touched","FormFeedback","data-testid","RadioInput","options","map","optionName","key","Field","name","component","charAt","toUpperCase","slice","FormGroupContainer","groupLegend","children","Row","Col","lg","ProfileUploader","props","getBase64","file","callback","reader","FileReader","addEventListener","result","readAsDataURL","handleProfileUpload","event","target","files","fileType","split","onChange","base64","setState","uploadedProfile","removeProfile","inputRef","current","React","createRef","state","this","style","backgroundImage","icon","faUser","size","transform","htmlFor","faPen","id","ref","accept","faTimes","Component","Tags","isMulti","CustomInput","datePlaceholder","DatePickerInput","customInput","Toastr","getClass","direction","custom","includes","toastrVisible","toastrHeader","toastrBody","Toast","isOpen","ToastHeader","toggle","ToastBody","validate","validators","isString","test","validationErrors","errors","Object","keys","forEach","field","fieldError","validateForm","values","firstName","presence","message","lastName","equality","attribute","comparator","toLowerCase","dateOfBirth","length","is","gender","email","confirmEmail","phoneNumber","alternatePhoneNumber","alternatePhone","primaryPhone","password","minimum","confirmPassword","address","city","zipCode","mapFormErrors","sleep","ms","Promise","resolve","setTimeout","fakeEmailApi","a","async","fakePhoneNumberApi","emailValidator","phoneNumberValidator","unNormalizedPhoneNumber","asyncFormValidation","constraints","then","err","dateNormalizer","moment","Date","format","onlyNums","replace","phoneNormalizer","zipNormalizer","Form","togglePasswordVisibility","prevState","showPassword","toggleConfirmedPasswordVisibility","showConfirmedPassword","handleFormSubmit","formValues","handleSubmit","submitting","Container","onSubmit","sm","DatePicker","normalize","faEyeSlash","faEye","Button","color","disabled","ReduxFormWithValidateJs","reduxForm","form","asyncValidate","asyncBlurFields","connect","store","authReducer","uiReducer","dispatch","signUpRequestAction","showToastrAction","initialState","isUserAuthenticated","reducer","action","combineReducers","formReducer","delay","authMiddleware","userAuthSaga","put","startSubmit","authenticateUser","stopSubmit","takeLatest","rootSaga","all","fork","authSaga","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1037f63d.chunk.js","sourcesContent":["import authActionTypes from './authActionTypes';\nimport formActionTypes from './formActionTypes';\nimport uiActionTypes from './uiActionTypes';\n\nexport default {\n  ...authActionTypes,\n  ...formActionTypes,\n  ...uiActionTypes,\n}\n","export default {\n  signUpRequest: 'SIGN_UP_REQUEST',\n  signUpSuccess: 'SIGN_UP_SUCCESS',\n  signUpFailure: 'SIGN_UP_FAILURE',\n}\n","export default {\n  updateField: '@@redux-form/CHANGE',\n}\n","export default {\n  showToastr: 'SHOW_TOASTR',\n  hideToastr: 'HIDE_TOASTR',\n}\n","import actionTypes from '../../actionTypes';\n\nexport const signUpRequestAction = (formValues) => {\n  return {\n    type: actionTypes.signUpRequest,\n    payload: formValues,\n  }\n}\n\nexport const signUpSuccessAction = (authObject) => {\n  return {\n    type: actionTypes.signUpSuccess,\n    payload: authObject,\n  }\n}\n\nexport const signUpFailureAction = (error) => {\n  return {\n    type: actionTypes.signUpFailure,\n    payload: {\n      authError: error,\n    },\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Spinner as BtSpinner } from 'reactstrap';\n\nimport './style.scss';\n\nconst Spinner = ({\n  solid,\n  customClass,\n}) => {\n  return (\n    <BtSpinner\n      className={\n        solid ?\n          `spinner solid ${customClass}` :\n          `spinner ${customClass}`\n      }\n    />\n  )\n}\n\nSpinner.propTypes = {\n  solid: PropTypes.bool,\n  customClass: PropTypes.string,\n}\n\nSpinner.defaultProps = {\n  solid: false,\n  customClass: '',\n}\n\nexport default Spinner;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropType from 'prop-types';\n\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap';\n\nimport Spinner from '../Spinner';\n\nimport './style.scss';\n\nconst TextInput = ({\n  input,\n  meta,\n  label,\n  placeholder,\n  type,\n  optional,\n  testingId,\n  onClick,\n  customClass,\n  fieldIcon,\n  iconAction,\n}) => {\n  return (\n    <FormGroup className={`text-input-container ${customClass}`}>\n      <Label>\n        {label}\n      </Label>\n      <span className=\"field-icon\" onClick={iconAction}>\n        {fieldIcon}\n      </span>\n      {\n        meta.asyncValidating &&\n        <Spinner customClass=\"async-spinner\" solid />\n      }\n      <Input\n        type={type}\n        placeholder={placeholder}\n        valid={optional && !input.value ? false : meta.valid}\n        invalid={meta.error && meta.touched}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...input}\n        onClick={onClick}\n      />\n      <FormFeedback type=\"invalid\" data-testid={testingId}>\n        {meta.error}\n      </FormFeedback>\n    </FormGroup>\n  )\n}\n\nTextInput.propTypes = {\n  input: PropType.object.isRequired,\n  meta: PropType.object.isRequired,\n  label: PropType.string.isRequired,\n  placeholder: PropType.string,\n  type: PropType.string.isRequired,\n  optional: PropType.bool,\n  testingId: PropType.string.isRequired,\n  onClick: PropType.func,\n  customClass: PropType.string,\n  fieldIcon: PropType.element,\n  iconAction: PropType.func,\n}\n\nTextInput.defaultProps = {\n  placeholder: '',\n  optional: false,\n  onClick: () => { },\n  customClass: '',\n  fieldIcon: null,\n  iconAction: () => { },\n}\n\nexport default TextInput;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { Fragment } from 'react';\nimport PropType from 'prop-types';\n\nimport { Field } from 'redux-form';\nimport { Label } from 'reactstrap';\n\nimport './style.scss';\n\nconst RadioInput = ({\n  label,\n  options,\n  meta,\n  input,\n  customClass,\n}) => {\n  const invalid = meta.touched && meta.error;\n\n  return (\n    <div className={`radio-input-container ${customClass}`}>\n      <Label className={invalid ?\n        'radio-input-label invalid' :\n        'radio-input-label'}\n      >\n        {label}\n        {\n          invalid &&\n          <span className=\"radio-error\">{meta.error}</span>\n        }\n      </Label>\n      {\n        options.map((optionName) => (\n          <Fragment key={optionName}>\n            <Field\n              className=\"radio-button\"\n              name={input.name}\n              component=\"input\"\n              type=\"radio\"\n              value={optionName}\n            />\n            <Label className=\"radio-button-label\">\n              {optionName.charAt(0).toUpperCase() + optionName.slice(1)}\n            </Label>\n          </Fragment>\n        ))\n      }\n    </div>\n  )\n}\n\nRadioInput.propTypes = {\n  label: PropType.string.isRequired,\n  options: PropType.array.isRequired,\n  meta: PropType.object.isRequired,\n  input: PropType.object.isRequired,\n  customClass: PropType.string,\n}\n\nRadioInput.defaultProps = {\n  customClass: '',\n}\n\nexport default RadioInput;\n","import React from 'react';\nimport PropType from 'prop-types';\n\nimport { Row, Col } from 'reactstrap';\n\nimport './style.scss';\n\nconst FormGroupContainer = ({\n  groupLegend,\n  children,\n}) =>\n  (\n    <>\n      <Row className=\"form-group-container\">\n        <Col lg={12}>\n          <p className=\"form-legend\">{groupLegend}</p>\n        </Col>\n        {children}\n      </Row>\n      <br />\n    </>\n  );\n\nFormGroupContainer.propTypes = {\n  groupLegend: PropType.string.isRequired,\n  children: PropType.element.isRequired,\n}\n\nexport default FormGroupContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPen, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\n\nimport './style.scss';\n\nclass ProfileUploader extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      uploadedProfile: '',\n    }\n  }\n\n  getBase64 = (file, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(file);\n  }\n\n  handleProfileUpload = (event) => {\n    const { input, showToastr, } = this.props;\n    const file = event.target.files[0];\n\n    if (!file.type) {\n      showToastr('Invalid Profile', 'Formats allowed: JPEG');\n\n      return;\n    }\n\n    const fileType = file.type.split('/');\n    if (fileType[0] !== 'image' || fileType[1] !== 'jpeg') {\n      showToastr('Invalid Profile', 'Formats allowed: JPEG');\n\n      return;\n    }\n\n    input.onChange(event);\n    this.getBase64(file, base64 => {\n      this.setState({\n        uploadedProfile: base64,\n      });\n    });\n  }\n\n  removeProfile = () => {\n    this.inputRef.current.value = '';\n    this.setState({\n      uploadedProfile: '',\n    });\n  }\n\n  render() {\n    const {\n      customClass,\n    } = this.props;\n\n    const {\n      uploadedProfile,\n    } = this.state;\n\n    return (\n      <div className={`profile-uploader-container ${customClass}`}>\n        <div\n          className=\"profile-container\"\n          style={{ backgroundImage: `url(${uploadedProfile})`, }}\n        >\n          {\n            !uploadedProfile &&\n            <FontAwesomeIcon\n              icon={faUser}\n              size=\"7x\"\n              transform=\"down-1.3\"\n            />\n          }\n        </div>\n        <div className=\"profile-actions\">\n          <label htmlFor=\"profile-uploader\">\n            <FontAwesomeIcon\n              className=\"snippet-icon\"\n              icon={faPen}\n            />\n\n            <input\n              id=\"profile-uploader\"\n              type=\"file\"\n              ref={this.inputRef}\n              onChange={this.handleProfileUpload}\n              accept=\"image/jpeg\"\n            />\n          </label>\n\n          {\n            uploadedProfile &&\n            <span>\n              <FontAwesomeIcon\n                className=\"snippet-icon\"\n                icon={faTimes}\n                onClick={this.removeProfile}\n              />\n            </span>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nProfileUploader.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  input: PropTypes.object.isRequired,\n  customClass: PropTypes.string,\n  showToastr: PropTypes.func.isRequired,\n}\n\nProfileUploader.defaultProps = {\n  customClass: '',\n}\n\nexport default ProfileUploader;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropType from 'prop-types';\n\nimport { Label } from 'reactstrap';\nimport Select from 'react-select';\n\nimport './style.scss';\n\nconst Tags = ({\n  label,\n  options,\n  input,\n  customClass,\n}) =>\n  (\n    <div className={`tags-container ${customClass}`}>\n      <Label>\n        {label}\n      </Label>\n      <Select\n        options={options}\n        onChange={input.onChange}\n        isMulti\n      />\n    </div>\n  );\n\nTags.propTypes = {\n  label: PropType.string.isRequired,\n  input: PropType.object.isRequired,\n  options: PropType.arrayOf(PropType.shape({\n    value: PropType.string.isRequired,\n    label: PropType.string.isRequired,\n  })).isRequired,\n  customClass: PropType.string,\n}\n\nTags.defaultProps = {\n  customClass: '',\n}\n\nexport default Tags;\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable react/forbid-prop-types */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport DatePicker from 'react-datepicker';\n\nimport TextInput from '../TextInput';\n\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './style.scss';\n\nclass CustomInput extends Component {\n  render() {\n    const {\n      input,\n      label,\n      meta,\n      datePlaceholder,\n      onClick,\n      testingId,\n      customClass,\n    } = this.props;\n\n    return (\n      <TextInput\n        input={input}\n        meta={meta}\n        label={label}\n        placeholder={datePlaceholder}\n        onClick={onClick}\n        type=\"string\"\n        testingId={testingId}\n        customClass={customClass}\n      />\n    );\n  }\n}\n\n\nCustomInput.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  datePlaceholder: PropTypes.string.isRequired,\n  testingId: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  customClass: PropTypes.string.isRequired,\n}\n\nCustomInput.defaultProps = {\n  onClick: () => { },\n}\n\nconst DatePickerInput = ({\n  input,\n  meta,\n  label,\n  placeholder,\n  testingId,\n  customClass,\n}) => {\n  return (\n    <div className=\"date-picker-container\">\n      <DatePicker\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...input}\n        customInput={\n          <CustomInput\n            input={input}\n            meta={meta}\n            label={label}\n            datePlaceholder={placeholder}\n            testingId={testingId}\n            customClass={customClass}\n          />\n        }\n      />\n    </div>\n  );\n}\n\nDatePickerInput.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  testingId: PropTypes.string.isRequired,\n  customClass: PropTypes.string,\n}\n\nDatePickerInput.defaultProps = {\n  customClass: '',\n}\n\nexport default DatePickerInput\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\n\nimport './style.scss';\n\nclass Toastr extends Component {\n  getClass = () => {\n    const { direction, custom, } = this.props;\n    const allowedDirections = ['top-right', 'bottom-right',];\n\n    if (allowedDirections.includes(direction)) {\n      return direction;\n    }\n\n    if (custom) {\n      return direction;\n    }\n\n    return 'bottom-right';\n  }\n\n  render() {\n    const {\n      toastrVisible,\n      toastrHeader,\n      toastrBody,\n      hideToastr,\n    } = this.props;\n\n    return (\n      <div className={`${this.getClass()}`}>\n        <Toast isOpen={toastrVisible}>\n          <ToastHeader toggle={hideToastr}>\n            {toastrHeader}\n          </ToastHeader>\n          <ToastBody>\n            {toastrBody}\n          </ToastBody>\n        </Toast>\n      </div>\n    )\n  }\n}\n\nToastr.propTypes = {\n  toastrVisible: PropTypes.bool.isRequired,\n  toastrHeader: PropTypes.string.isRequired,\n  toastrBody: PropTypes.string.isRequired,\n  hideToastr: PropTypes.func.isRequired,\n  direction: PropTypes.string,\n  custom: PropTypes.bool,\n}\n\nToastr.defaultProps = {\n  direction: '',\n  custom: false,\n}\n\nexport default Toastr;\n","import validate from 'validate.js';\n\nvalidate.validators.isString = (value) => {\n  const regexp = /^[A-Za-z ]+$/;\n\n  if (!regexp.test(value)) {\n    return 'cannot have numbers 0-9 and special characters such as _ ! @ # % ^';\n  }\n\n  return '';\n}","export default (validationErrors) => {\n  const errors = {};\n\n  Object.keys(validationErrors).forEach((field) => {\n    const fieldError = validationErrors[field][0];\n    errors[field] = fieldError;\n  });\n\n  return errors;\n}","import validate from 'validate.js';\nimport './customValidators';\n\nimport mapFormErrors from './mapFormErrors';\n\nconst validateForm = values => {\n  const constraints = {\n    // Personal Details\n    firstName: {\n      presence: {\n        message: '^Required',\n      },\n\n      // using our own customn validator\n      // to check if first name is string or not\n      // which has been imported from customValidators\n      // named as isString to which we can pass args\n      // in form of a single string or an object\n      // composed of multiple key and value pair\n      isString: {},\n\n      // or we can use a regex like this\n      // to specify if value is string or not\n      // by using the format validator which\n      // tests the value against the\n      // regex provided by us\n\n      // format: {\n      //   pattern: '[A-Za-z]+',\n      //   flags: 'i',\n      //   message: 'cannot have numbers 0-9 and special characters such as _ ! @ # % ^',\n      // },\n    },\n    lastName: {\n      presence: {\n        message: '^Required',\n      },\n\n      // same custom validator as that of\n      // first name is used here to check if\n      // last name is string or not\n      isString: {},\n\n      equality: {\n        attribute: 'firstName',\n        message: 'cannot be same as first name',\n        comparator(lastName, firstName) {\n          if (firstName) {\n            return lastName.toLowerCase() !== firstName.toLowerCase();\n          }\n\n          return false;\n        },\n      },\n    },\n    dateOfBirth: {\n      presence: {\n        message: '^Required',\n      },\n      length: {\n        is: 10,\n        message: '^Invalid date',\n      },\n    },\n    gender: {\n      presence: {\n        message: '^Required',\n      },\n    },\n\n    // Account Information\n    email: {\n      presence: {\n        message: '^Required',\n      },\n      email: {\n        message: '^Invalid format',\n      },\n    },\n    confirmEmail: {\n      presence: {\n        message: '^Required',\n      },\n      email: {\n        message: '^Invalid format',\n      },\n      equality: {\n        attribute: 'email',\n        message: '^Email doesn\\'t match',\n      },\n    },\n    phoneNumber: {\n      presence: {\n        message: '^Required',\n      },\n      length: {\n        is: 11,\n        message: 'too short',\n      },\n    },\n    alternatePhoneNumber: {\n      length: {\n        is: 11,\n        message: 'too short',\n      },\n      equality: {\n        attribute: 'phoneNumber',\n        message: '^Cannot be same as primary phone number',\n        comparator(alternatePhone, primaryPhone) {\n          return alternatePhone !== primaryPhone;\n        },\n      },\n    },\n    password: {\n      presence: {\n        message: '^Required',\n      },\n      length: {\n        minimum: 6,\n        message: '^Minimum length should 6',\n      },\n    },\n    confirmPassword: {\n      presence: {\n        message: '^Required',\n      },\n      equality: {\n        attribute: 'password',\n        message: '^Password doesn\\'t match',\n      },\n    },\n\n    // Contact Information\n    address: {\n      presence: {\n        message: '^Required',\n      },\n    },\n    city: {\n      presence: {\n        message: '^Required',\n      },\n    },\n    state: {\n      presence: {\n        message: '^Required',\n      },\n    },\n    zipCode: {\n      presence: {\n        message: '^Required',\n      },\n      length: {\n        is: 7,\n        message: 'too short',\n      },\n    },\n  }\n\n  const validationErrors = validate(values, constraints);\n\n  if (validationErrors) {\n    return mapFormErrors(validationErrors);\n  }\n\n  return {};\n}\n\nexport default validateForm;\n","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const fakeEmailApi = async email => {\n  await sleep(500);\n\n  return email === 'name@example.com';\n};\n\nexport const fakePhoneNumberApi = async phoneNumber => {\n  await sleep(500);\n\n  return phoneNumber === '9999999999';\n};","import validate from 'validate.js';\n\nimport { fakeEmailApi, fakePhoneNumberApi } from './fakeApi';\n\nvalidate.validators.emailValidator = async (value) => {\n  return new validate.Promise(async (resolve) => {\n\n    // a fake api which checks if entered\n    // email address is already registered\n    const isEmailRegistered = await fakeEmailApi(value);\n\n    if (isEmailRegistered) resolve('^This email is already registered');\n    else resolve();\n  });\n};\n\nvalidate.validators.phoneNumberValidator = async (phoneNumber) => {\n  return new validate.Promise(async (resolve) => {\n\n    // we un-normalize phone number as it\n    // is normalized in form of 99999-99999\n    // thus we need to un-normalize it by\n    // removing - from in between\n    const unNormalizedPhoneNumber = `${phoneNumber.slice(0, 5)}${phoneNumber.slice(6, 11)}`;\n\n    // a fake api which checks if entered\n    // phone number is already registered\n    const isPhoneNumberRegistered = await fakePhoneNumberApi(unNormalizedPhoneNumber);\n\n    if (isPhoneNumberRegistered) resolve('^This phone number is already registered');\n    else resolve();\n  });\n};","import validate from 'validate.js';\nimport './asyncValidators';\n\nimport mapFormErrors from './mapFormErrors';\n\nconst asyncFormValidation = async values => {\n\n  // the validators must work only\n  // if we receive their corresponding\n  // values from the form\n  const constraints = {\n    email: { emailValidator: !!values.email, },\n    phoneNumber: { phoneNumberValidator: !!values.phoneNumber, },\n  };\n\n  // validate the fields asynchronously\n  // with the promise provided\n  // by validate.js library\n  const validationErrors = await validate\n    .async(values, constraints)\n\n    // first callback is for success and returns\n    // an empty string\n    // second callback is for error and returns\n    // the error message corresponding to\n    // it's field\n    .then(() => '', err => err);\n\n  // if there are any errors from the\n  // validators then map the errors\n  // with the respective fields as\n  // { fieldName: errorMessage, }\n  // and send the errors back to form\n  if (validationErrors) {\n    throw mapFormErrors(validationErrors);\n  }\n};\n\nexport default asyncFormValidation;\n","import moment from 'moment';\n\nconst dateNormalizer = (value) => {\n  if (!value) {\n    return value\n  }\n\n  if (typeof (value) === 'object' || value.length >= 20) {\n    return moment(new Date(value)).format('DD/MM/YYYY');\n  }\n\n  const onlyNums = value.replace(/[^\\d]/g, '');\n\n  if (onlyNums.length <= 2) {\n    return onlyNums;\n  }\n\n  if (onlyNums.length <= 4) {\n    return `${onlyNums.slice(0, 2)}/${onlyNums.slice(2)}`;\n  }\n\n  return `${onlyNums.slice(0, 2)}/${onlyNums.slice(2, 4)}/${onlyNums.slice(4, 8)}`;\n}\n\nexport default dateNormalizer;\n","const phoneNormalizer = (value) => {\n  if (!value) {\n    return value\n  }\n\n  const onlyNums = value.replace(/[^\\d]/g, '');\n\n  if (onlyNums.length <= 5) {\n    return onlyNums;\n  }\n\n  return `${onlyNums.slice(0, 5)}-${onlyNums.slice(5, 10)}`;\n}\n\nexport default phoneNormalizer;\n","const zipNormalizer = (value) => {\n  if (!value) {\n    return value\n  }\n\n  const onlyNums = value.replace(/[^\\d]/g, '');\n\n  if (onlyNums.length <= 3) {\n    return onlyNums;\n  }\n\n  return `${onlyNums.slice(0, 3)}-${onlyNums.slice(3, 6)}`;\n}\n\nexport default zipNormalizer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxForm, Field } from 'redux-form';\nimport { Container, Button, Col } from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\nimport Spinner from '../Spinner';\nimport TextInput from '../TextInput';\nimport RadioInput from '../RadioInput';\nimport FormGroupContainer from '../FormGroupContainer';\nimport ProfileUploader from '../ProfileUploader'\nimport Tags from '../Tags';\nimport DatePicker from '../DatePicker';\nimport Toastr from '../Toastr';\n\nimport validate from '../../utils/validations';\nimport asyncValidate from '../../utils/asyncValidations';\nimport dateNormalizer from '../../normalizers/dateNormalizer';\nimport phoneNormalizer from '../../normalizers/phoneNormalizer';\nimport zipNormalizer from '../../normalizers/zipNormalizer';\n\nimport './style.scss';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false,\n      showConfirmedPassword: false,\n    }\n\n  }\n\n  togglePasswordVisibility = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword,\n    }));\n  }\n\n  toggleConfirmedPasswordVisibility = () => {\n    this.setState(prevState => ({\n      showConfirmedPassword: !prevState.showConfirmedPassword,\n    }));\n  }\n\n  handleFormSubmit = (formValues) => {\n    const { signUpRequest, } = this.props;\n    signUpRequest(formValues);\n  }\n\n  render() {\n    const {\n      handleSubmit,\n      submitting,\n      authError,\n      toastrVisible,\n      toastrHeader,\n      toastrBody,\n      showToastr,\n      hideToastr,\n    } = this.props;\n\n    const {\n      showPassword,\n      showConfirmedPassword,\n    } = this.state;\n\n    return (\n      <Container className=\"complex-sign-up-form-container\">\n        <p className=\"form-heading\">Validate JS With Redux Form</p>\n\n        <form onSubmit={handleSubmit(this.handleFormSubmit)}>\n          <FormGroupContainer groupLegend=\"Personal Details\">\n            <>\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"profile\"\n                  showToastr={showToastr}\n                  component={ProfileUploader}\n                />\n              </Col>\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"skills\"\n                  label=\"Skills\"\n                  options={[\n                    { value: 'react js', label: 'React JS', },\n                    { value: 'node js', label: 'Node JS', },\n                    { value: 'webpack', label: 'Webpack', },\n                    { value: 'ajax', label: 'Ajax', },\n                  ]}\n                  component={Tags}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  placeholder=\"John\"\n                  testingId=\"firstNameError\"\n                  type=\"string\"\n                  component={TextInput}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  placeholder=\"Appleseed\"\n                  testingId=\"lastNameError\"\n                  type=\"string\"\n                  component={TextInput}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"dateOfBirth\"\n                  label=\"Date Of Birth\"\n                  placeholder=\"dd/mm/yyyy\"\n                  testingId=\"dateOfBirthError\"\n                  component={DatePicker}\n                  normalize={dateNormalizer}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"gender\"\n                  label=\"Gender\"\n                  testingId=\"genderError\"\n                  options={[\n                    'male',\n                    'female',\n                    'other',\n                  ]}\n                  component={RadioInput}\n                />\n              </Col>\n            </>\n          </FormGroupContainer>\n\n          <FormGroupContainer groupLegend=\"Account Information\">\n            <>\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"email\"\n                  label=\"Email\"\n                  placeholder=\"name@example.com\"\n                  testingId=\"emailError\"\n                  type=\"string\"\n                  component={TextInput}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"confirmEmail\"\n                  label=\"Confirm Email\"\n                  placeholder=\"name@example.com\"\n                  testingId=\"emailError\"\n                  type=\"string\"\n                  component={TextInput}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"password\"\n                  label=\"Password\"\n                  placeholder=\"**********\"\n                  testingId=\"passwordError\"\n                  type={showPassword ? 'string' : 'password'}\n                  component={TextInput}\n                  fieldIcon={<FontAwesomeIcon icon={showPassword ? faEyeSlash : faEye} />}\n                  iconAction={this.togglePasswordVisibility}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  placeholder=\"**********\"\n                  testingId=\"confirmPasswordError\"\n                  type={showConfirmedPassword ? 'string' : 'password'}\n                  component={TextInput}\n                  fieldIcon={<FontAwesomeIcon icon={showConfirmedPassword ? faEyeSlash : faEye} />}\n                  iconAction={this.toggleConfirmedPasswordVisibility}\n                />\n              </Col>\n            </>\n          </FormGroupContainer>\n\n          <FormGroupContainer groupLegend=\"Contact Information\">\n            <>\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"address\"\n                  label=\"Address\"\n                  placeholder=\"#123 Block A Layout\"\n                  testingId=\"addressError\"\n                  type=\"string\"\n                  component={TextInput}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"city\"\n                  label=\"City\"\n                  placeholder=\"Bengaluru\"\n                  testingId=\"cityError\"\n                  type=\"string\"\n                  component={TextInput}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"state\"\n                  label=\"State\"\n                  placeholder=\"Karnataka\"\n                  testingId=\"stateError\"\n                  type=\"string\"\n                  component={TextInput}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"zipCode\"\n                  label=\"Zip Code\"\n                  placeholder=\"560-076\"\n                  testingId=\"zipCodeError\"\n                  type=\"string\"\n                  component={TextInput}\n                  normalize={zipNormalizer}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"phoneNumber\"\n                  label=\"Phone Number\"\n                  placeholder=\"99999-88888\"\n                  testingId=\"phoneNumberError\"\n                  type=\"string\"\n                  component={TextInput}\n                  normalize={phoneNormalizer}\n                />\n              </Col>\n\n              <Col lg={6} sm={6}>\n                <Field\n                  name=\"alternatePhoneNumber\"\n                  label=\"Alternate Phone Number\"\n                  placeholder=\"(optional)\"\n                  testingId=\"phoneNumberError\"\n                  type=\"string\"\n                  component={TextInput}\n                  normalize={phoneNormalizer}\n                  optional\n                />\n              </Col>\n            </>\n          </FormGroupContainer>\n\n          <Button\n            color=\"primary\"\n            type=\"submit\"\n            className=\"submit-button\"\n            disabled={submitting}\n          >\n            {submitting ? <Spinner /> : 'Sign In'}\n          </Button>\n        </form>\n\n        <Toastr\n          toastrVisible={toastrVisible}\n          toastrHeader={toastrHeader}\n          toastrBody={toastrBody}\n          hideToastr={hideToastr}\n        />\n\n        &nbsp;\n        {\n          authError &&\n          (\n            <p className=\"auth-error\">\n              {authError}\n            </p>\n          )\n        }\n        <p className=\"login-redirect\">\n          Already have an account?&nbsp;\n          <u>Login in here</u>\n        </p>\n      </Container>\n    )\n  }\n}\n\nconst ReduxFormWithValidateJs = reduxForm({\n  form: 'Form',\n  validate,\n  asyncValidate,\n  asyncBlurFields: ['email', 'phoneNumber',],\n})(Form)\n\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  signUpRequest: PropTypes.func.isRequired,\n  authError: PropTypes.string.isRequired,\n  submitting: PropTypes.bool.isRequired,\n  toastrVisible: PropTypes.bool.isRequired,\n  toastrHeader: PropTypes.string.isRequired,\n  toastrBody: PropTypes.string.isRequired,\n  showToastr: PropTypes.func.isRequired,\n  hideToastr: PropTypes.func.isRequired,\n}\n\nexport default ReduxFormWithValidateJs;","import { connect } from 'react-redux';\n\nimport {\n  signUpRequestAction,\n  showToastrAction,\n  hideToastrAction\n} from '../Store/actions';\n\nimport Form from '../Components/Form';\n\nconst mapStateToProps = (store) => {\n  return {\n    authError: store.authReducer.authError,\n    toastrVisible: store.uiReducer.toastrVisible,\n    toastrHeader: store.uiReducer.toastrHeader,\n    toastrBody: store.uiReducer.toastrBody,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUpRequest: (formValues) => dispatch(signUpRequestAction(formValues)),\n    hideToastr: () => dispatch(hideToastrAction()),\n    showToastr: (toastrHeader, toastrBody) => dispatch(showToastrAction(toastrHeader, toastrBody)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import actionTypes from '../../actionTypes';\n\nexport const showToastrAction = (toastrHeader, toastrBody) => {\n  return {\n    type: actionTypes.showToastr,\n    payload: {\n      toastrHeader,\n      toastrBody,\n    },\n  }\n}\n\nexport const hideToastrAction = () => {\n  return {\n    type: actionTypes.hideToastr,\n    payload: {},\n  }\n}\n","import actionTypes from '../../actionTypes';\n\nconst initialState = {\n  isUserAuthenticated: false,\n  authError: '',\n}\n\nconst reducer = (state = initialState, action) => {\n  const { payload, } = action;\n\n  switch (action.type) {\n    case actionTypes.signUpRequest:\n      return {\n        ...state,\n        isUserAuthenticated: false,\n        authError: '',\n      };\n\n    case actionTypes.signUpSuccess:\n      return {\n        ...state,\n        ...payload,\n        authError: '',\n      };\n\n    case actionTypes.signUpFailure:\n      return {\n        ...state,\n        isUserAuthenticated: false,\n        authError: payload.authError,\n      };\n\n    case actionTypes.updateField:\n      return {\n        ...state,\n        authError: '',\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import actionTypes from '../../actionTypes';\n\nconst initialState = {\n  toastrVisible: false,\n  toastrHeader: '',\n  toastrBody: '',\n};\n\nconst reducer = (state = initialState, action) => {\n  const { payload, } = action;\n\n  switch (action.type) {\n    case actionTypes.showToastr:\n      return {\n        ...state,\n        toastrVisible: true,\n        toastrHeader: payload.toastrHeader,\n        toastrBody: payload.toastrBody,\n      }\n\n    case actionTypes.hideToastr:\n      return {\n        ...state,\n        toastrVisible: false,\n        toastrHeader: '',\n        toastrBody: '',\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer/index';\nimport uiReducer from './uiReducer/index';\n\nconst reducer = combineReducers({\n  form: formReducer,\n  authReducer,\n  uiReducer,\n})\n\nexport default reducer;\n","import { delay } from 'redux-saga/effects';\n\nexport default function* () {\n    yield delay(2000);\n\n    return {\n        isUserAuthenticated: true,\n    }\n}\n","import { takeLatest, put } from 'redux-saga/effects';\nimport { startSubmit, stopSubmit } from 'redux-form';\n\nimport actionTypes from '../../actionTypes';\n\nimport {\n  signUpSuccessAction,\n  signUpFailureAction\n} from '../../actions';\n\nimport authenticateUser from '../../../services/authenticationServices';\n\nfunction* authMiddleware(action) {\n  const formValues = action.payload;\n\n  try {\n    yield put(startSubmit('Form'));\n    const authObject = yield authenticateUser(formValues);\n    yield put(signUpSuccessAction(authObject));\n    yield put(stopSubmit('Form'));\n  } catch (error) {\n    yield put(signUpFailureAction(error.message));\n    yield put(stopSubmit('Form'));\n  }\n}\n\n\nexport default function* userAuthSaga() {\n  yield takeLatest(actionTypes.signUpRequest, authMiddleware);\n}\n","import { all, fork } from 'redux-saga/effects'\n\nimport authSaga from './authSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(authSaga),\n  ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './reducers';\nimport rootSaga from './sagas/index';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Container from '../Container';\nimport store from '../Store';\n\nconst App = () => (\n  <Provider store={store}>\n    <Container />\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}